<?php

namespace Tests\Feature;

use App\Console\Commands\DumpBrowsingHistoriesFromCacheToDbCommand;
use App\Models\Product;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Bus;
use Illuminate\Support\Facades\Redis;
use Laravel\Sanctum\Sanctum;
use Tests\TestCase;

class BrowsingHistoryTest extends TestCase
{
    private Product $product;
    private User $user;

    protected function setUp(): void
    {
        $this->product = Product::factory()->create();
        $this->user = User::factory()->create();

        Sanctum::actingAs($this->user);

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testHistoryEntryAddedAfterUserSeesProduct() {
        $user = $this->user;
        $product = $this->product;

        $this->get(route('products.show', ['product' => $product->id]))
            ->assertStatus(200);

        $user->refresh();

        $this->assertCount(1, $user->getBrowsingHistoryService()->getAllHistory());
    }

    public function testBrowsingHistoryDumpFromCacheToDb() {
        $user = $this->user;

        Bus::dispatch(DumpBrowsingHistoriesFromCacheToDbCommand::class);

        $user->refresh();

        $this->assertCount(1, $user->browsing_history['entries']);

        $this->assertCount(0, Redis::lrange("browsing_histories:$user->id"));
    }
}
